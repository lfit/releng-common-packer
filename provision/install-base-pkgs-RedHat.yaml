---
- name: Run fix-centos-repos.sh script to ensure repositories are configured properly
  ansible.builtin.script: ../fix-centos-repos.sh
  args:
    creates: /var/tmp/fix-centos-repos-done
  register: repo_fix_result
  ignore_errors: true
  when:
    - ansible_os_family == 'RedHat'

- name: Check if IUS repository is available (for legacy compatibility)
  ansible.builtin.uri:
    url: "https://repo.ius.io/stable/{{ ansible_distribution_major_version|lower }}/x86_64/repodata/repomd.xml"
    method: HEAD
    timeout: 10
  register: ius_check
  failed_when: false
  ignore_errors: yes

- name: Configure alternate Git source for CentOS 7
  block:
    - name: Install Software Collections Repository for CentOS 7 (alternative to IUS)
      ansible.builtin.yum:
        name: centos-release-scl
        state: present
      when:
        - ansible_facts['distribution_major_version'] is version('7', '==')

    - name: Install Git 2.x from SCL
      ansible.builtin.yum:
        name: git224-git
        state: present
      register: git_scl_result
      when:
        - ansible_facts['distribution_major_version'] is version('7', '==')

    - name: Create git symlink for SCL
      ansible.builtin.file:
        src: /opt/rh/git224/root/usr/bin/git
        dest: /usr/bin/git
        state: link
      when:
        - ansible_facts['distribution_major_version'] is version('7', '==')
        - git_scl_result.changed
  when:
    - ansible_os_family == 'RedHat'
    - ansible_facts['distribution_major_version'] is version('7', '==')
    - ius_check.status != 200

- name: Configure IUS repository (only if available)
  become: true
  ansible.builtin.yum_repository:
    name: ius
    description: IUS Community Packages for Enterprise Linux
    baseurl: https://repo.ius.io/stable/{{ ansible_distribution_major_version|lower }}/$basearch/
    gpgkey: https://repo.ius.io/RPM-GPG-KEY-IUS-{{ ansible_distribution_major_version|lower }}
    enabled: "true"
    gpgcheck: "true"
  when:
    - ansible_os_family == 'RedHat'
    - ansible_facts['distribution_major_version'] is version('7', '>=')
    - ius_check.status == 200

- name: Install fallback git package if IUS repository unavailable
  ansible.builtin.yum:
    name: git
    state: present
  become: true
  when:
    - ansible_facts['distribution_major_version'] is version('8', '<')
    - ius_check is failed

- name: Install git from default repositories for CentOS 8+
  ansible.builtin.yum:
    name: git
    state: present
  become: true
  when:
    - ansible_facts['distribution_major_version'] is version('8', '>=')
    - ansible_facts['os_family'] == 'RedHat'

# Note: Using ansible_facts does not match/return the minor versions of the
# Repoid (for CentOS 8.2.2004 and earlier is 'PowerTools' and for CentOS 8.3.2011
# and later the repo name is 'powertools'. To handle this check the repo file path
# and enable the correct repo.
# Ref: https://wiki.centos.org/Manuals/ReleaseNotes/CentOS8.2011#Yum_repo_file_and_repoid_changes
- name: Enable PowerTools repository for CentOS 8.{0,2,3}
  when:
    - ansible_facts.distribution_major_version|int >= 8
  block:
    - name: Check the file name in path '/etc/yum.repos.d/' for CentOS 8.{2.2004} or earlier versions
      ansible.builtin.shell: grep -lE "^\[PowerTools\]" /etc/yum.repos.d/*.repo
      register: repofile
      changed_when: false
      failed_when: false
      check_mode: false

    - name: Enable 'PowerTools' repo for CentOS 8.{2.2004} or earlier versions if the file exist
      community.general.ini_file:
        path: "{{ repofile.stdout }}"
        section: "PowerTools"
        option: enabled
        value: "1"
        no_extra_spaces: true
      when: repofile.rc == 0
      become: true

    - name: Check the file name in path '/etc/yum.repos.d/' for CentOS 8.{3.2011} or later versions
      ansible.builtin.shell: grep -lE "^\[powertools\]" /etc/yum.repos.d/*.repo
      register: repofile
      changed_when: false
      failed_when: false
      check_mode: false

    - name: Enable 'powertools' repo for CentOS 8.{3.2011} or later versions if the file exist
      community.general.ini_file:
        path: "{{ repofile.stdout }}"
        section: "powertools"
        option: enabled
        value: 1
        no_extra_spaces: true
      when: repofile.rc == 0
      become: true

- name: "Download the RPM GPG KEY for EPEL - {{ ansible_distribution_major_version }}"
  ansible.builtin.get_url:
    url: https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}
    dest: /tmp/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}
    mode: "0644"
  become: true
  when:
    - ansible_os_family == 'RedHat' and ansible_facts['distribution_major_version'] is version('8', '>=')

- name: Import RPM GPG KEY into the DB
  ansible.builtin.rpm_key:
    key: /tmp/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}
    state: present
  become: true
  when:
    - ansible_os_family == 'RedHat' and ansible_facts['distribution_major_version'] is version('8', '>=')

- name: Enable CRB repository for CentOS Stream 9 (needed for EPEL)
  ansible.builtin.command: dnf config-manager --set-enabled crb
  args:
    creates: /var/tmp/crb-enabled
  become: true
  when:
    - ansible.builtin.command: grep -q "centos:9" /etc/os-release
      args:
        warn: false
      register: centos9_check
      ignore_errors: true
    - ansible_os_family == 'RedHat'
    - ansible_facts['distribution_major_version'] is version('9', '==')
    - centos9_check.rc == 0

- name: Install EPEL repository first (needed for lf-recommended-tools packages)
  ansible.builtin.yum:
    name:
      - https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm
    state: present
  become: true
  when:
    - ansible_os_family == 'RedHat'

- name: Enable CRB repository for CentOS 9 (required for EPEL packages)
  ansible.builtin.command:
    cmd: /usr/bin/crb enable
  become: true
  ignore_errors: true
  when:
    - ansible_facts['distribution_major_version'] is version('9', '>=')
    - ansible_facts['os_family'] == 'RedHat'

- name: Install base packages
  ansible.builtin.yum:
    name:
      - "@base"
      - "@development"
      - yum-utils
    state: latest
  become: true

# Note: Ansible dnf module does not support modules install,enable. Once this
# is supported in the new version update the code to use dnf module through
# Ansible.
- name: Enable CentOS stream 8 dependent modules
  block:
    - name: Enable pki-core
      ansible.builtin.command:
        cmd: dnf module enable pki-core -y
      become: true
    - name: Enable pki-deps
      ansible.builtin.command:
        cmd: dnf module enable pki-deps -y
      become: true
  when: ansible_os_family == 'RedHat' and ansible_facts['distribution_major_version'] is version('8', '>=')

- name: Install sigul client for EL 7
  ansible.builtin.yum:
    name:
      - https://kojipkgs.fedoraproject.org/repos-dist/epel7-infra/latest/x86_64/Packages/s/sigul-0.207-1.el7.x86_64.rpm
    state: latest
  become: true
  when:
    - ansible_facts['distribution_major_version'] is version('8', '<')

- name: "Download the RPM GPG KEY for CentOS 8 Sigul"
  ansible.builtin.get_url:
    url: https://infrastructure.fedoraproject.org/repo/infra/RPM-GPG-KEY-INFRA-TAGS
    dest: /tmp/RPM-GPG-KEY-INFRA-TAGS
    mode: "0644"
  become: true
  when:
    - ansible_os_family == 'RedHat' and ansible_facts['distribution_major_version'] is version('8', '>=')

- name: Import RPM GPG KEY into the DB for Sigul on CentOS 8
  ansible.builtin.rpm_key:
    key: /tmp/RPM-GPG-KEY-INFRA-TAGS
    state: present
  become: true
  when:
    - ansible_os_family == 'RedHat' and ansible_facts['distribution_major_version'] is version('8', '>=')

- name: Install sigul client for EL 8 (Streams)
  ansible.builtin.yum:
    name:
      - https://kojipkgs.fedoraproject.org/repos-dist/epel8-infra/latest/x86_64/Packages/s/sigul-1.1-1.el8.infra.x86_64.rpm
    state: latest
  become: true
  when:
    - ansible_facts['distribution_major_version'] is version('8', '>=')

- name: Swap to git236
  block:
    - name: Install yum-plugin-replace
      ansible.builtin.yum:
        name: yum-plugin-replace
        state: present
        update_cache: true
    - name: Gather rpm package facts
      package_facts:
        manager: auto
    - name: Replace git with git236
      ansible.builtin.command: yum replace -y git --replace-with git236
      when: ansible_facts.packages['git'] is defined
  become: true
  when:
    - ansible_distribution_major_version|int < 8

# Retry package installation with alternative repositories if needed
# Fix SSH configuration for CentOS 9 Stream
- name: Fix SSH configuration for better Ansible compatibility on CentOS Stream 9
  ansible.builtin.script: ../fix-ssh-config.sh
  args:
    creates: /var/tmp/ssh-fixed-for-ansible
  register: ssh_fix_result
  ignore_errors: true
  when:
    - ansible_os_family == 'RedHat'
    - ansible_facts['distribution_major_version'] is version('9', '==')

# Fallback task for when EPEL packages are not found (sshpass, xmlstarlet)
- name: Install alternative packages when standard packages are unavailable
  block:
    - name: Try to install sshpass from EPEL directly
      ansible.builtin.yum:
        name: https://dl.fedoraproject.org/pub/epel/{{ ansible_distribution_major_version }}/Everything/x86_64/Packages/s/sshpass-1.09-4.el{{ ansible_distribution_major_version }}.x86_64.rpm
        state: present
        disable_gpg_check: true
      when:
        - ansible_facts['os_family'] == 'RedHat'
      ignore_errors: true

    - name: Try to install xmlstarlet from EPEL directly
      ansible.builtin.yum:
        name: https://dl.fedoraproject.org/pub/epel/{{ ansible_distribution_major_version }}/Everything/x86_64/Packages/x/xmlstarlet-1.6.1-20.el{{ ansible_distribution_major_version }}.x86_64.rpm
        state: present
        disable_gpg_check: true
      when:
        - ansible_facts['os_family'] == 'RedHat'
      ignore_errors: true

    - name: For CentOS 9, try direct package download if repository version fails
      block:
        - name: Create temporary download directory
          ansible.builtin.file:
            path: /tmp/direct-pkgs
            state: directory
            mode: "0755"

        - name: Download packages directly from CentOS 9 mirror
          ansible.builtin.get_url:
            url: "https://mirror.stream.centos.org/9-stream/AppStream/x86_64/os/Packages/{{ item }}"
            dest: "/tmp/direct-pkgs/{{ item }}"
          loop:
            - "sshpass-1.09-4.el9.x86_64.rpm"
            - "xmlstarlet-1.6.1-21.el9.x86_64.rpm"
          ignore_errors: true

        - name: Install downloaded packages
          ansible.builtin.yum:
            name: "/tmp/direct-pkgs/{{ item }}"
            state: present
            disable_gpg_check: true
          loop:
            - "sshpass-1.09-4.el9.x86_64.rpm"
            - "xmlstarlet-1.6.1-21.el9.x86_64.rpm"
          ignore_errors: true
      when:
        - ansible_facts['os_family'] == 'RedHat'
        - ansible_facts['distribution_major_version'] is version('9', '==')
  when:
    - ansible_facts['os_family'] == 'RedHat'
